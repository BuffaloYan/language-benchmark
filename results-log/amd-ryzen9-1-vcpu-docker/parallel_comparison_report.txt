================================================================================
PARALLEL IMPLEMENTATION COMPARISON REPORT
================================================================================
Generated: 2025-06-07 17:09:16
Test Data: 10,000,000 random integers
Task: Parallel merge sort + prime counting
System: 6 CPU cores, Linux

OVERALL PERFORMANCE RANKINGS:
--------------------------------------------------------------------------------
Rank Implementation                 Type       Exec Time    Wall Time    Speedup 
--------------------------------------------------------------------------------
1    C Sequential                   Sequential   1.6804s      1.9839s     1.00x
2    Rust Rayon                     Parallel     1.7013s      1.9121s     0.99x
3    C pthreads                     Sequential   1.7019s      1.9280s     0.99x
4    Rust Sequential                Sequential   1.8732s      2.1068s     0.90x
5    Go (optimized)                 Sequential   2.0368s      1.4058s     0.83x
6    Java Sequential                Sequential   2.1408s      3.4380s     0.78x
7    Java Fork-Join                 Parallel     2.2915s      3.9228s     0.73x
8    Go (original)                  Sequential   2.3706s      3.0597s     0.71x
9    JavaScript Sequential          Sequential   2.8150s      4.8840s     0.60x
10   JavaScript SharedArrayBuffer   Parallel     3.0050s      4.8103s     0.56x
11   JavaScript Workers             Parallel     5.5270s      7.6999s     0.30x

PARALLEL EFFICIENCY ANALYSIS:
--------------------------------------------------------------------------------

Java:
  Parallel Implementation: Java Fork-Join
  Sequential Time:    2.1408s
  Parallel Time:      2.2915s
  Speedup:              0.93x
  Parallel Efficiency:  15.6%

Rust:
  Parallel Implementation: Rust Rayon
  Sequential Time:    1.8732s
  Parallel Time:      1.7013s
  Speedup:              1.10x
  Parallel Efficiency:  18.4%

JavaScript:
  Parallel Implementation: JavaScript Workers
  Sequential Time:    2.8150s
  Parallel Time:      5.5270s
  Speedup:              0.51x
  Parallel Efficiency:   8.5%

JavaScript Parallel Approaches Comparison:
  Sequential:         2.8150s (baseline)
  Worker Threads:     5.5270s (speedup: 0.51x, efficiency: 8.5%)
  SharedArrayBuffer:   3.0050s (speedup: 0.94x, efficiency: 15.6%)

Go Algorithm Comparison (Single-threaded):
  Original Algorithm:     2.3706s (memory allocating)
  Optimized Algorithm:    2.0368s (in-place)
  Improvement:              14.1% (1.16x speedup)

DETAILED RESULTS:
--------------------------------------------------------------------------------

Java Fork-Join:
  Status: SUCCESS
  Execution Time:   2.2915 seconds
  Wall Clock Time:   3.9228 seconds
  CPU Cores Used: 1
  Parallelism Level: 1

C pthreads:
  Status: SUCCESS
  Execution Time:   1.7019 seconds
  Wall Clock Time:   1.9280 seconds
  CPU Cores Used: 6

Rust Rayon:
  Status: SUCCESS
  Execution Time:   1.7013 seconds
  Wall Clock Time:   1.9121 seconds
  CPU Cores Used: 1
  Workers/Threads: 1

JavaScript Workers:
  Status: SUCCESS
  Execution Time:   5.5270 seconds
  Wall Clock Time:   7.6999 seconds
  CPU Cores Used: 6
  Workers/Threads: 6

JavaScript SharedArrayBuffer:
  Status: SUCCESS
  Execution Time:   3.0050 seconds
  Wall Clock Time:   4.8103 seconds
  CPU Cores Used: 6
  Workers/Threads: 6

Java Sequential:
  Status: SUCCESS
  Execution Time:   2.1408 seconds
  Wall Clock Time:   3.4380 seconds

Go (original):
  Status: SUCCESS
  Execution Time:   2.3706 seconds
  Wall Clock Time:   3.0597 seconds

Go (optimized):
  Status: SUCCESS
  Execution Time:   2.0368 seconds
  Wall Clock Time:   1.4058 seconds

C Sequential:
  Status: SUCCESS
  Execution Time:   1.6804 seconds
  Wall Clock Time:   1.9839 seconds

Rust Sequential:
  Status: SUCCESS
  Execution Time:   1.8732 seconds
  Wall Clock Time:   2.1068 seconds

JavaScript Sequential:
  Status: SUCCESS
  Execution Time:   2.8150 seconds
  Wall Clock Time:   4.8840 seconds

PERFORMANCE SUMMARY:
--------------------------------------------------------------------------------
Execution Times:
  Fastest:   1.6804s
  Slowest:   5.5270s
  Average:   2.4676s
  Range:       3.29x difference

Wall Clock Times:
  Fastest:   1.4058s
  Slowest:   7.6999s
  Average:   3.3774s
  Range:       5.48x difference

SYSTEM INFORMATION:
--------------------------------------------------------------------------------
CPU Cores: 6
Platform: Linux
OS: Linux 5.15.167.4-microsoft-standard-WSL2
Architecture: x86_64
Python Version: 3.11.0rc1

================================================================================
End of Report
================================================================================