================================================================================
PARALLEL IMPLEMENTATION COMPARISON REPORT
================================================================================
Generated: 2025-06-08 14:21:00
Test Data: 10,000,000 random integers
Task: Parallel merge sort + prime counting
System: 2 CPU cores, Linux

OVERALL PERFORMANCE RANKINGS:
--------------------------------------------------------------------------------
Rank Implementation                 Type       Exec Time    Wall Time    Speedup 
--------------------------------------------------------------------------------
1    Rust Rayon                     Parallel     0.1437s      0.1879s     1.00x
2    C pthreads                     Sequential   0.1686s      0.2154s     0.85x
3    Java Fork-Join                 Parallel     0.2863s      0.6397s     0.50x
4    C Sequential                   Sequential   0.3252s      0.3734s     0.44x
5    Rust Sequential                Sequential   0.3571s      0.3973s     0.40x
6    JavaScript SharedArrayBuffer   Parallel     0.4110s      0.6860s     0.35x
7    Java Sequential                Sequential   0.4289s      0.7828s     0.34x
8    Go (optimized)                 Sequential   0.4758s      0.6856s     0.30x
9    Go (original)                  Sequential   0.5254s      0.7282s     0.27x
10   JavaScript Sequential          Sequential   0.5360s      0.8451s     0.27x
11   JavaScript Workers             Parallel     0.7990s      1.1520s     0.18x

PARALLEL EFFICIENCY ANALYSIS:
--------------------------------------------------------------------------------

Java:
  Parallel Implementation: Java Fork-Join
  Sequential Time:    0.4289s
  Parallel Time:      0.2863s
  Speedup:              1.50x
  Parallel Efficiency:  74.9%

Rust:
  Parallel Implementation: Rust Rayon
  Sequential Time:    0.3571s
  Parallel Time:      0.1437s
  Speedup:              2.49x
  Parallel Efficiency: 124.3%

JavaScript:
  Parallel Implementation: JavaScript Workers
  Sequential Time:    0.5360s
  Parallel Time:      0.7990s
  Speedup:              0.67x
  Parallel Efficiency:  33.5%

JavaScript Parallel Approaches Comparison:
  Sequential:         0.5360s (baseline)
  Worker Threads:     0.7990s (speedup: 0.67x, efficiency: 33.5%)
  SharedArrayBuffer:   0.4110s (speedup: 1.30x, efficiency: 65.2%)

Go Algorithm Comparison (Single-threaded):
  Original Algorithm:     0.5254s (memory allocating)
  Optimized Algorithm:    0.4758s (in-place)
  Improvement:               9.4% (1.10x speedup)

DETAILED RESULTS:
--------------------------------------------------------------------------------

Java Fork-Join:
  Status: SUCCESS
  Execution Time:   0.2863 seconds
  Wall Clock Time:   0.6397 seconds
  CPU Cores Used: 2
  Parallelism Level: 2

C pthreads:
  Status: SUCCESS
  Execution Time:   0.1686 seconds
  Wall Clock Time:   0.2154 seconds
  CPU Cores Used: 2

Rust Rayon:
  Status: SUCCESS
  Execution Time:   0.1437 seconds
  Wall Clock Time:   0.1879 seconds
  CPU Cores Used: 2
  Workers/Threads: 2

JavaScript Workers:
  Status: SUCCESS
  Execution Time:   0.7990 seconds
  Wall Clock Time:   1.1520 seconds
  CPU Cores Used: 2
  Workers/Threads: 2

JavaScript SharedArrayBuffer:
  Status: SUCCESS
  Execution Time:   0.4110 seconds
  Wall Clock Time:   0.6860 seconds
  CPU Cores Used: 2
  Workers/Threads: 2

Java Sequential:
  Status: SUCCESS
  Execution Time:   0.4289 seconds
  Wall Clock Time:   0.7828 seconds

Go (original):
  Status: SUCCESS
  Execution Time:   0.5254 seconds
  Wall Clock Time:   0.7282 seconds

Go (optimized):
  Status: SUCCESS
  Execution Time:   0.4758 seconds
  Wall Clock Time:   0.6856 seconds

C Sequential:
  Status: SUCCESS
  Execution Time:   0.3252 seconds
  Wall Clock Time:   0.3734 seconds

Rust Sequential:
  Status: SUCCESS
  Execution Time:   0.3571 seconds
  Wall Clock Time:   0.3973 seconds

JavaScript Sequential:
  Status: SUCCESS
  Execution Time:   0.5360 seconds
  Wall Clock Time:   0.8451 seconds

PERFORMANCE SUMMARY:
--------------------------------------------------------------------------------
Execution Times:
  Fastest:   0.1437s
  Slowest:   0.7990s
  Average:   0.4052s
  Range:       5.56x difference

Wall Clock Times:
  Fastest:   0.1879s
  Slowest:   1.1520s
  Average:   0.6085s
  Range:       6.13x difference

SYSTEM INFORMATION:
--------------------------------------------------------------------------------
CPU Cores: 2
Platform: Linux
OS: Linux 6.1.134-152.225.amzn2023.x86_64
Architecture: x86_64
Python Version: 3.11.0rc1

================================================================================
End of Report
================================================================================