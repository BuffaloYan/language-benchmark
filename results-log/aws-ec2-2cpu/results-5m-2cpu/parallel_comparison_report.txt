================================================================================
PARALLEL IMPLEMENTATION COMPARISON REPORT
================================================================================
Generated: 2025-06-08 14:36:35
Test Data: 10,000,000 random integers
Task: Parallel merge sort + prime counting
System: 2 CPU cores, Linux

OVERALL PERFORMANCE RANKINGS:
--------------------------------------------------------------------------------
Rank Implementation                 Type       Exec Time    Wall Time    Speedup 
--------------------------------------------------------------------------------
1    Rust Rayon                     Parallel     0.7617s      0.9658s     1.00x
2    C pthreads                     Sequential   0.9687s      1.2055s     0.79x
3    Java Fork-Join                 Parallel     1.1985s      2.3283s     0.64x
4    JavaScript SharedArrayBuffer   Parallel     1.4461s      2.6743s     0.53x
5    C Sequential                   Sequential   1.7142s      1.9435s     0.44x
6    Rust Sequential                Sequential   1.8590s      2.0589s     0.41x
7    Java Sequential                Sequential   2.0357s      3.1581s     0.37x
8    Go (optimized)                 Sequential   2.4539s      3.3957s     0.31x
9    JavaScript Sequential          Sequential   2.6780s      3.9899s     0.28x
10   Go (original)                  Sequential   2.7131s      3.6833s     0.28x
11   JavaScript Workers             Parallel     4.2780s      5.4883s     0.18x

PARALLEL EFFICIENCY ANALYSIS:
--------------------------------------------------------------------------------

Java:
  Parallel Implementation: Java Fork-Join
  Sequential Time:    2.0357s
  Parallel Time:      1.1985s
  Speedup:              1.70x
  Parallel Efficiency:  84.9%

Rust:
  Parallel Implementation: Rust Rayon
  Sequential Time:    1.8590s
  Parallel Time:      0.7617s
  Speedup:              2.44x
  Parallel Efficiency: 122.0%

JavaScript:
  Parallel Implementation: JavaScript Workers
  Sequential Time:    2.6780s
  Parallel Time:      4.2780s
  Speedup:              0.63x
  Parallel Efficiency:  31.3%

JavaScript Parallel Approaches Comparison:
  Sequential:         2.6780s (baseline)
  Worker Threads:     4.2780s (speedup: 0.63x, efficiency: 31.3%)
  SharedArrayBuffer:   1.4461s (speedup: 1.85x, efficiency: 92.6%)

Go Algorithm Comparison (Single-threaded):
  Original Algorithm:     2.7131s (memory allocating)
  Optimized Algorithm:    2.4539s (in-place)
  Improvement:               9.6% (1.11x speedup)

DETAILED RESULTS:
--------------------------------------------------------------------------------

Java Fork-Join:
  Status: SUCCESS
  Execution Time:   1.1985 seconds
  Wall Clock Time:   2.3283 seconds
  CPU Cores Used: 2
  Parallelism Level: 2

C pthreads:
  Status: SUCCESS
  Execution Time:   0.9687 seconds
  Wall Clock Time:   1.2055 seconds
  CPU Cores Used: 2

Rust Rayon:
  Status: SUCCESS
  Execution Time:   0.7617 seconds
  Wall Clock Time:   0.9658 seconds
  CPU Cores Used: 2
  Workers/Threads: 2

JavaScript Workers:
  Status: SUCCESS
  Execution Time:   4.2780 seconds
  Wall Clock Time:   5.4883 seconds
  CPU Cores Used: 2
  Workers/Threads: 2

JavaScript SharedArrayBuffer:
  Status: SUCCESS
  Execution Time:   1.4461 seconds
  Wall Clock Time:   2.6743 seconds
  CPU Cores Used: 2
  Workers/Threads: 2

Java Sequential:
  Status: SUCCESS
  Execution Time:   2.0357 seconds
  Wall Clock Time:   3.1581 seconds

Go (original):
  Status: SUCCESS
  Execution Time:   2.7131 seconds
  Wall Clock Time:   3.6833 seconds

Go (optimized):
  Status: SUCCESS
  Execution Time:   2.4539 seconds
  Wall Clock Time:   3.3957 seconds

C Sequential:
  Status: SUCCESS
  Execution Time:   1.7142 seconds
  Wall Clock Time:   1.9435 seconds

Rust Sequential:
  Status: SUCCESS
  Execution Time:   1.8590 seconds
  Wall Clock Time:   2.0589 seconds

JavaScript Sequential:
  Status: SUCCESS
  Execution Time:   2.6780 seconds
  Wall Clock Time:   3.9899 seconds

PERFORMANCE SUMMARY:
--------------------------------------------------------------------------------
Execution Times:
  Fastest:   0.7617s
  Slowest:   4.2780s
  Average:   2.0097s
  Range:       5.62x difference

Wall Clock Times:
  Fastest:   0.9658s
  Slowest:   5.4883s
  Average:   2.8083s
  Range:       5.68x difference

SYSTEM INFORMATION:
--------------------------------------------------------------------------------
CPU Cores: 2
Platform: Linux
OS: Linux 6.1.134-152.225.amzn2023.x86_64
Architecture: x86_64
Python Version: 3.11.0rc1

================================================================================
End of Report
================================================================================