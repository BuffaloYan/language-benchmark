{
  "timestamp": "2025-06-08T12:48:07.971230",
  "system_info": {
    "cpu_cores": 1,
    "platform": "Linux",
    "python_version": "3.11.0"
  },
  "results": {
    "Java Fork-Join": {
      "success": false,
      "error": "Exception in thread \"main\" java.lang.OutOfMemoryError: Java heap space\n\tat java.base/java.util.Arrays.copyOfRange(Arrays.java:3822)\n\tat java.base/java.lang.StringLatin1.newString(StringLatin1.java:769)\n\tat java.base/java.lang.String.substring(String.java:2714)\n\tat java.base/java.lang.String.split(String.java:3127)\n\tat java.base/java.lang.String.split(String.java:3201)\n\tat ParallelMergeSort.loadData(ParallelMergeSort.java:139)\n\tat ParallelMergeSort.main(ParallelMergeSort.java:170)\n",
      "wall_time": 2.6851344108581543
    },
    "C pthreads": {
      "success": true,
      "execution_time": 2.0572,
      "wall_time": 2.333007335662842,
      "stdout": "\ud83d\ude80 C Parallel Merge Sort + Prime Counting\n=========================================\nAvailable processors: 1\nMax recursion depth: 2\nSequential threshold: 1000 elements\n\n\ud83d\udcca Loading data...\nLoaded 5000000 numbers\n\ud83d\udd04 Starting parallel merge sort...\n\u2705 Parallel merge sort completed in 0.6844 seconds\n\ud83d\udd0d Sorting verified: true\n\ud83d\udd22 Starting parallel prime counting...\n\u2705 Parallel prime counting completed in 1.3728 seconds\n\ud83d\udcca Found 332381 prime numbers\n\u23f1\ufe0f  Total execution time: 2.0572 seconds\n\n\ud83d\udcc8 Performance Analysis:\n- Sort time: 0.6844 seconds\n- Prime time: 1.3728 seconds\n- Total time: 2.0572 seconds\n- CPU cores used: 1\n",
      "parallelism_info": {
        "cores": 1
      }
    },
    "Rust Rayon": {
      "success": true,
      "execution_time": 2.4635,
      "wall_time": 2.6913325786590576,
      "stdout": "[RUST-RAYON] Rust Parallel Merge Sort + Prime Counting\n============================================\nAvailable CPU cores: 1\nParallel threshold: 10,000 elements\n\n[DATA] Loading data...\nLoaded 5000000 numbers\n[SORT] Starting parallel merge sort...\n[SUCCESS] Parallel merge sort completed in 0.4071 seconds\n[VERIFY] Sorting verified: true\n[PRIMES] Starting parallel prime counting...\n[SUCCESS] Parallel prime counting completed in 2.0564 seconds\n[RESULT] Found 332381 prime numbers\n[TIME] Total execution time: 2.4635 seconds\n\n[PERFORMANCE] Performance Details:\n- Rayon thread pool size: 1\n- Sequential threshold: 10,000 elements\n- Sort time: 0.4071s\n- Prime time: 2.0564s\n",
      "parallelism_info": {
        "cores": 1,
        "workers": 1
      }
    },
    "JavaScript Workers": {
      "success": false,
      "error": "Timeout",
      "timeout": 300
    },
    "JavaScript SharedArrayBuffer": {
      "success": true,
      "execution_time": 4.7067,
      "wall_time": 9.52096939086914,
      "stdout": "[SHAREDARRAYBUFFER] JavaScript SharedArrayBuffer Parallel Merge Sort + Prime Counting\n====================================================================\nAvailable CPU cores: 1\n[DATA] Loading data...\nLoaded 5,000,000 numbers\n\ud83d\udd27 SharedArrayBuffer Setup:\n   - Data size: 5,000,000 integers\n   - Workers: 1\n   - Sequential threshold: 50,000\n   - Shared memory: 19.1 MB\n\n[SORT] Starting SharedArrayBuffer parallel merge sort...\n[SUCCESS] Parallel merge sort completed in 1.9242 seconds\n[VERIFY] Sorting verified: true\n\n[PRIMES] Starting SharedArrayBuffer parallel prime counting...\n[SUCCESS] Parallel prime counting completed in 2.7825 seconds\n[RESULT] Found 332,381 prime numbers\n\n[TIME] Total execution time: 4.7067 seconds\n\n[PERFORMANCE] Performance Details:\n- Workers used: 1\n- Sequential threshold: 50,000\n- Shared memory size: 19.1 MB\n- Sort time: 1.9242s\n- Prime time: 2.7825s\n",
      "parallelism_info": {
        "cores": 1,
        "workers": 1
      }
    },
    "Java Sequential": {
      "success": false,
      "error": "Exception in thread \"main\" java.lang.OutOfMemoryError: Java heap space\n\tat java.base/java.util.Arrays.copyOfRange(Arrays.java:3822)\n\tat java.base/java.lang.StringLatin1.newString(StringLatin1.java:769)\n\tat java.base/java.lang.String.substring(String.java:2714)\n\tat java.base/java.lang.String.split(String.java:3127)\n\tat java.base/java.lang.String.split(String.java:3201)\n\tat MergeSort.loadData(MergeSort.java:57)\n\tat MergeSort.main(MergeSort.java:111)\n",
      "wall_time": 3.2261126041412354
    },
    "Go (original)": {
      "success": true,
      "execution_time": 5.9853,
      "wall_time": 6.939586400985718,
      "stdout": "Loading data...\nLoaded 5000000 numbers\nStarting merge sort...\nGo merge sort completed in 1.2036 seconds\nSorting verified: true\nCounting prime numbers...\nPrime counting completed in 4.7818 seconds\nFound 332381 prime numbers\nTotal execution time: 5.9853 seconds\n",
      "parallelism_info": {}
    },
    "Go (optimized)": {
      "success": true,
      "execution_time": 5.6019,
      "wall_time": 6.734789133071899,
      "stdout": "Loading data...\nLoaded 5000000 numbers\nStarting merge sort...\nGo optimized merge sort completed in 0.7809 seconds\nSorting verified: true\nCounting prime numbers...\nPrime counting completed in 4.8210 seconds\nFound 332381 prime numbers\nTotal execution time: 5.6019 seconds\n",
      "parallelism_info": {}
    },
    "C Sequential": {
      "success": true,
      "execution_time": 2.0838,
      "wall_time": 2.394984722137451,
      "stdout": "Loading data...\nLoaded 5000000 numbers\nStarting merge sort...\nC merge sort completed in 0.6875 seconds\nSorting verified: true\nCounting prime numbers...\nPrime counting completed in 1.3963 seconds\nFound 332381 prime numbers\nTotal execution time: 2.0838 seconds\n",
      "parallelism_info": {}
    },
    "Rust Sequential": {
      "success": true,
      "execution_time": 2.3498,
      "wall_time": 2.605806827545166,
      "stdout": "Loading data...\nLoaded 5000000 numbers\nStarting merge sort...\nRust merge sort completed in 0.8233 seconds\nSorting verified: true\nCounting prime numbers...\nPrime counting completed in 1.5265 seconds\nFound 332381 prime numbers\nTotal execution time: 2.3498 seconds\n",
      "parallelism_info": {}
    },
    "JavaScript Sequential": {
      "success": true,
      "execution_time": 3.91,
      "wall_time": 6.494347810745239,
      "stdout": "Loading data...\nLoaded 5,000,000 numbers\nStarting merge sort...\nJavaScript optimized merge sort completed in 1.5330 seconds\nSorting verified: true\nCounting prime numbers...\nPrime counting completed in 2.3770 seconds\nFound 332,381 prime numbers\nTotal execution time: 3.9100 seconds\n",
      "parallelism_info": {}
    }
  }
}