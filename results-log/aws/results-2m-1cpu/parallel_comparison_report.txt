================================================================================
PARALLEL IMPLEMENTATION COMPARISON REPORT
================================================================================
Generated: 2025-06-08 14:31:42
Test Data: 10,000,000 random integers
Task: Parallel merge sort + prime counting
System: 2 CPU cores, Linux

OVERALL PERFORMANCE RANKINGS:
--------------------------------------------------------------------------------
Rank Implementation                 Type       Exec Time    Wall Time    Speedup 
--------------------------------------------------------------------------------
1    Rust Rayon                     Parallel     0.5648s      0.6689s     1.00x
2    C Sequential                   Sequential   0.6636s      0.7542s     0.85x
3    C pthreads                     Sequential   0.6709s      0.7668s     0.84x
4    Rust Sequential                Sequential   0.7256s      0.8036s     0.78x
5    Java Fork-Join                 Parallel     0.8655s      1.6507s     0.65x
6    Java Sequential                Sequential   0.8669s      1.6088s     0.65x
7    Go (optimized)                 Sequential   0.9673s      1.4526s     0.58x
8    JavaScript Sequential          Sequential   1.0380s      1.8413s     0.54x
9    Go (original)                  Sequential   1.0875s      1.6907s     0.52x
10   JavaScript SharedArrayBuffer   Parallel     1.1125s      1.6757s     0.51x
11   JavaScript Workers             Parallel     1.8940s      2.5478s     0.30x

PARALLEL EFFICIENCY ANALYSIS:
--------------------------------------------------------------------------------

Java:
  Parallel Implementation: Java Fork-Join
  Sequential Time:    0.8669s
  Parallel Time:      0.8655s
  Speedup:              1.00x
  Parallel Efficiency:  50.1%

Rust:
  Parallel Implementation: Rust Rayon
  Sequential Time:    0.7256s
  Parallel Time:      0.5648s
  Speedup:              1.28x
  Parallel Efficiency:  64.2%

JavaScript:
  Parallel Implementation: JavaScript Workers
  Sequential Time:    1.0380s
  Parallel Time:      1.8940s
  Speedup:              0.55x
  Parallel Efficiency:  27.4%

JavaScript Parallel Approaches Comparison:
  Sequential:         1.0380s (baseline)
  Worker Threads:     1.8940s (speedup: 0.55x, efficiency: 27.4%)
  SharedArrayBuffer:   1.1125s (speedup: 0.93x, efficiency: 46.7%)

Go Algorithm Comparison (Single-threaded):
  Original Algorithm:     1.0875s (memory allocating)
  Optimized Algorithm:    0.9673s (in-place)
  Improvement:              11.1% (1.12x speedup)

DETAILED RESULTS:
--------------------------------------------------------------------------------

Java Fork-Join:
  Status: SUCCESS
  Execution Time:   0.8655 seconds
  Wall Clock Time:   1.6507 seconds
  CPU Cores Used: 1
  Parallelism Level: 1

C pthreads:
  Status: SUCCESS
  Execution Time:   0.6709 seconds
  Wall Clock Time:   0.7668 seconds
  CPU Cores Used: 2

Rust Rayon:
  Status: SUCCESS
  Execution Time:   0.5648 seconds
  Wall Clock Time:   0.6689 seconds
  CPU Cores Used: 1
  Workers/Threads: 1

JavaScript Workers:
  Status: SUCCESS
  Execution Time:   1.8940 seconds
  Wall Clock Time:   2.5478 seconds
  CPU Cores Used: 2
  Workers/Threads: 2

JavaScript SharedArrayBuffer:
  Status: SUCCESS
  Execution Time:   1.1125 seconds
  Wall Clock Time:   1.6757 seconds
  CPU Cores Used: 2
  Workers/Threads: 2

Java Sequential:
  Status: SUCCESS
  Execution Time:   0.8669 seconds
  Wall Clock Time:   1.6088 seconds

Go (original):
  Status: SUCCESS
  Execution Time:   1.0875 seconds
  Wall Clock Time:   1.6907 seconds

Go (optimized):
  Status: SUCCESS
  Execution Time:   0.9673 seconds
  Wall Clock Time:   1.4526 seconds

C Sequential:
  Status: SUCCESS
  Execution Time:   0.6636 seconds
  Wall Clock Time:   0.7542 seconds

Rust Sequential:
  Status: SUCCESS
  Execution Time:   0.7256 seconds
  Wall Clock Time:   0.8036 seconds

JavaScript Sequential:
  Status: SUCCESS
  Execution Time:   1.0380 seconds
  Wall Clock Time:   1.8413 seconds

PERFORMANCE SUMMARY:
--------------------------------------------------------------------------------
Execution Times:
  Fastest:   0.5648s
  Slowest:   1.8940s
  Average:   0.9506s
  Range:       3.35x difference

Wall Clock Times:
  Fastest:   0.6689s
  Slowest:   2.5478s
  Average:   1.4055s
  Range:       3.81x difference

SYSTEM INFORMATION:
--------------------------------------------------------------------------------
CPU Cores: 2
Platform: Linux
OS: Linux 6.1.134-152.225.amzn2023.x86_64
Architecture: x86_64
Python Version: 3.11.0rc1

================================================================================
End of Report
================================================================================