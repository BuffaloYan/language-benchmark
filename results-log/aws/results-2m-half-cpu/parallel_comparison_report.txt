================================================================================
PARALLEL IMPLEMENTATION COMPARISON REPORT
================================================================================
Generated: 2025-06-08 14:28:53
Test Data: 10,000,000 random integers
Task: Parallel merge sort + prime counting
System: 2 CPU cores, Linux

OVERALL PERFORMANCE RANKINGS:
--------------------------------------------------------------------------------
Rank Implementation                 Type       Exec Time    Wall Time    Speedup 
--------------------------------------------------------------------------------
1    C Sequential                   Sequential   0.6620s      1.5007s     1.00x
2    Rust Rayon                     Parallel     1.1663s      1.2995s     0.57x
3    C pthreads                     Sequential   1.3911s      1.5859s     0.48x
4    Rust Sequential                Sequential   1.4728s      1.6043s     0.45x
5    Java Fork-Join                 Parallel     1.6982s      3.2748s     0.39x
6    Java Sequential                Sequential   1.7503s      3.2461s     0.38x
7    Go (optimized)                 Sequential   1.9709s      3.0132s     0.34x
8    Go (original)                  Sequential   2.1331s      3.2564s     0.31x
9    JavaScript SharedArrayBuffer   Parallel     2.3300s      3.4954s     0.28x
10   JavaScript Sequential          Sequential   2.4920s      3.7045s     0.27x
11   JavaScript Workers             Parallel     3.8030s      5.1031s     0.17x

PARALLEL EFFICIENCY ANALYSIS:
--------------------------------------------------------------------------------

Java:
  Parallel Implementation: Java Fork-Join
  Sequential Time:    1.7503s
  Parallel Time:      1.6982s
  Speedup:              1.03x
  Parallel Efficiency:  51.5%

Rust:
  Parallel Implementation: Rust Rayon
  Sequential Time:    1.4728s
  Parallel Time:      1.1663s
  Speedup:              1.26x
  Parallel Efficiency:  63.1%

JavaScript:
  Parallel Implementation: JavaScript Workers
  Sequential Time:    2.4920s
  Parallel Time:      3.8030s
  Speedup:              0.66x
  Parallel Efficiency:  32.8%

JavaScript Parallel Approaches Comparison:
  Sequential:         2.4920s (baseline)
  Worker Threads:     3.8030s (speedup: 0.66x, efficiency: 32.8%)
  SharedArrayBuffer:   2.3300s (speedup: 1.07x, efficiency: 53.5%)

Go Algorithm Comparison (Single-threaded):
  Original Algorithm:     2.1331s (memory allocating)
  Optimized Algorithm:    1.9709s (in-place)
  Improvement:               7.6% (1.08x speedup)

DETAILED RESULTS:
--------------------------------------------------------------------------------

Java Fork-Join:
  Status: SUCCESS
  Execution Time:   1.6982 seconds
  Wall Clock Time:   3.2748 seconds
  CPU Cores Used: 1
  Parallelism Level: 1

C pthreads:
  Status: SUCCESS
  Execution Time:   1.3911 seconds
  Wall Clock Time:   1.5859 seconds
  CPU Cores Used: 2

Rust Rayon:
  Status: SUCCESS
  Execution Time:   1.1663 seconds
  Wall Clock Time:   1.2995 seconds
  CPU Cores Used: 1
  Workers/Threads: 1

JavaScript Workers:
  Status: SUCCESS
  Execution Time:   3.8030 seconds
  Wall Clock Time:   5.1031 seconds
  CPU Cores Used: 2
  Workers/Threads: 2

JavaScript SharedArrayBuffer:
  Status: SUCCESS
  Execution Time:   2.3300 seconds
  Wall Clock Time:   3.4954 seconds
  CPU Cores Used: 2
  Workers/Threads: 2

Java Sequential:
  Status: SUCCESS
  Execution Time:   1.7503 seconds
  Wall Clock Time:   3.2461 seconds

Go (original):
  Status: SUCCESS
  Execution Time:   2.1331 seconds
  Wall Clock Time:   3.2564 seconds

Go (optimized):
  Status: SUCCESS
  Execution Time:   1.9709 seconds
  Wall Clock Time:   3.0132 seconds

C Sequential:
  Status: SUCCESS
  Execution Time:   0.6620 seconds
  Wall Clock Time:   1.5007 seconds

Rust Sequential:
  Status: SUCCESS
  Execution Time:   1.4728 seconds
  Wall Clock Time:   1.6043 seconds

JavaScript Sequential:
  Status: SUCCESS
  Execution Time:   2.4920 seconds
  Wall Clock Time:   3.7045 seconds

PERFORMANCE SUMMARY:
--------------------------------------------------------------------------------
Execution Times:
  Fastest:   0.6620s
  Slowest:   3.8030s
  Average:   1.8972s
  Range:       5.74x difference

Wall Clock Times:
  Fastest:   1.2995s
  Slowest:   5.1031s
  Average:   2.8258s
  Range:       3.93x difference

SYSTEM INFORMATION:
--------------------------------------------------------------------------------
CPU Cores: 2
Platform: Linux
OS: Linux 6.1.134-152.225.amzn2023.x86_64
Architecture: x86_64
Python Version: 3.11.0rc1

================================================================================
End of Report
================================================================================