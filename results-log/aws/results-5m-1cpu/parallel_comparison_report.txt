================================================================================
PARALLEL IMPLEMENTATION COMPARISON REPORT
================================================================================
Generated: 2025-06-08 14:47:05
Test Data: 10,000,000 random integers
Task: Parallel merge sort + prime counting
System: 2 CPU cores, Linux

OVERALL PERFORMANCE RANKINGS:
--------------------------------------------------------------------------------
Rank Implementation                 Type       Exec Time    Wall Time    Speedup 
--------------------------------------------------------------------------------
1    Rust Rayon                     Parallel     1.4549s      1.6660s     1.00x
2    C pthreads                     Sequential   1.6873s      1.9215s     0.86x
3    C Sequential                   Sequential   1.7068s      1.9460s     0.85x
4    Rust Sequential                Sequential   2.0601s      2.2587s     0.71x
5    Java Sequential                Sequential   2.1222s      3.4039s     0.69x
6    Java Fork-Join                 Parallel     2.1754s      3.8278s     0.67x
7    Go (optimized)                 Sequential   2.4621s      3.7295s     0.59x
8    JavaScript SharedArrayBuffer   Parallel     2.5233s      3.8078s     0.58x
9    JavaScript Sequential          Sequential   2.7130s      4.1129s     0.54x
10   Go (original)                  Sequential   2.7814s      4.0086s     0.52x
11   JavaScript Workers             Parallel     4.9990s      6.3508s     0.29x

PARALLEL EFFICIENCY ANALYSIS:
--------------------------------------------------------------------------------

Java:
  Parallel Implementation: Java Fork-Join
  Sequential Time:    2.1222s
  Parallel Time:      2.1754s
  Speedup:              0.98x
  Parallel Efficiency:  48.8%

Rust:
  Parallel Implementation: Rust Rayon
  Sequential Time:    2.0601s
  Parallel Time:      1.4549s
  Speedup:              1.42x
  Parallel Efficiency:  70.8%

JavaScript:
  Parallel Implementation: JavaScript Workers
  Sequential Time:    2.7130s
  Parallel Time:      4.9990s
  Speedup:              0.54x
  Parallel Efficiency:  27.1%

JavaScript Parallel Approaches Comparison:
  Sequential:         2.7130s (baseline)
  Worker Threads:     4.9990s (speedup: 0.54x, efficiency: 27.1%)
  SharedArrayBuffer:   2.5233s (speedup: 1.08x, efficiency: 53.8%)

Go Algorithm Comparison (Single-threaded):
  Original Algorithm:     2.7814s (memory allocating)
  Optimized Algorithm:    2.4621s (in-place)
  Improvement:              11.5% (1.13x speedup)

DETAILED RESULTS:
--------------------------------------------------------------------------------

Java Fork-Join:
  Status: SUCCESS
  Execution Time:   2.1754 seconds
  Wall Clock Time:   3.8278 seconds
  CPU Cores Used: 1
  Parallelism Level: 1

C pthreads:
  Status: SUCCESS
  Execution Time:   1.6873 seconds
  Wall Clock Time:   1.9215 seconds
  CPU Cores Used: 2

Rust Rayon:
  Status: SUCCESS
  Execution Time:   1.4549 seconds
  Wall Clock Time:   1.6660 seconds
  CPU Cores Used: 1
  Workers/Threads: 1

JavaScript Workers:
  Status: SUCCESS
  Execution Time:   4.9990 seconds
  Wall Clock Time:   6.3508 seconds
  CPU Cores Used: 2
  Workers/Threads: 2

JavaScript SharedArrayBuffer:
  Status: SUCCESS
  Execution Time:   2.5233 seconds
  Wall Clock Time:   3.8078 seconds
  CPU Cores Used: 2
  Workers/Threads: 2

Java Sequential:
  Status: SUCCESS
  Execution Time:   2.1222 seconds
  Wall Clock Time:   3.4039 seconds

Go (original):
  Status: SUCCESS
  Execution Time:   2.7814 seconds
  Wall Clock Time:   4.0086 seconds

Go (optimized):
  Status: SUCCESS
  Execution Time:   2.4621 seconds
  Wall Clock Time:   3.7295 seconds

C Sequential:
  Status: SUCCESS
  Execution Time:   1.7068 seconds
  Wall Clock Time:   1.9460 seconds

Rust Sequential:
  Status: SUCCESS
  Execution Time:   2.0601 seconds
  Wall Clock Time:   2.2587 seconds

JavaScript Sequential:
  Status: SUCCESS
  Execution Time:   2.7130 seconds
  Wall Clock Time:   4.1129 seconds

PERFORMANCE SUMMARY:
--------------------------------------------------------------------------------
Execution Times:
  Fastest:   1.4549s
  Slowest:   4.9990s
  Average:   2.4260s
  Range:       3.44x difference

Wall Clock Times:
  Fastest:   1.6660s
  Slowest:   6.3508s
  Average:   3.3667s
  Range:       3.81x difference

SYSTEM INFORMATION:
--------------------------------------------------------------------------------
CPU Cores: 2
Platform: Linux
OS: Linux 6.1.134-152.225.amzn2023.x86_64
Architecture: x86_64
Python Version: 3.11.0rc1

================================================================================
End of Report
================================================================================