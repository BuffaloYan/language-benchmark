================================================================================
PARALLEL IMPLEMENTATION COMPARISON REPORT
================================================================================
Generated: 2025-06-08 14:51:11
Test Data: 10,000,000 random integers
Task: Parallel merge sort + prime counting
System: 2 CPU cores, Linux

OVERALL PERFORMANCE RANKINGS:
--------------------------------------------------------------------------------
Rank Implementation                 Type       Exec Time    Wall Time    Speedup 
--------------------------------------------------------------------------------
1    C Sequential                   Sequential   1.7115s      3.8957s     1.00x
2    Rust Rayon                     Parallel     2.9513s      3.3054s     0.58x
3    C pthreads                     Sequential   3.4003s      3.9567s     0.50x
4    Rust Sequential                Sequential   4.1051s      4.5053s     0.42x
5    Java Sequential                Sequential   4.2529s      6.9002s     0.40x
6    Java Fork-Join                 Parallel     4.3064s      7.6101s     0.40x
7    Go (optimized)                 Sequential   4.9124s      7.3964s     0.35x
8    JavaScript Sequential          Sequential   5.3820s      8.1751s     0.32x
9    JavaScript SharedArrayBuffer   Parallel     5.4711s      7.9956s     0.31x
10   Go (original)                  Sequential   5.5959s      8.0420s     0.31x
11   JavaScript Workers             Parallel     9.8940s     12.6052s     0.17x

PARALLEL EFFICIENCY ANALYSIS:
--------------------------------------------------------------------------------

Java:
  Parallel Implementation: Java Fork-Join
  Sequential Time:    4.2529s
  Parallel Time:      4.3064s
  Speedup:              0.99x
  Parallel Efficiency:  49.4%

Rust:
  Parallel Implementation: Rust Rayon
  Sequential Time:    4.1051s
  Parallel Time:      2.9513s
  Speedup:              1.39x
  Parallel Efficiency:  69.5%

JavaScript:
  Parallel Implementation: JavaScript Workers
  Sequential Time:    5.3820s
  Parallel Time:      9.8940s
  Speedup:              0.54x
  Parallel Efficiency:  27.2%

JavaScript Parallel Approaches Comparison:
  Sequential:         5.3820s (baseline)
  Worker Threads:     9.8940s (speedup: 0.54x, efficiency: 27.2%)
  SharedArrayBuffer:   5.4711s (speedup: 0.98x, efficiency: 49.2%)

Go Algorithm Comparison (Single-threaded):
  Original Algorithm:     5.5959s (memory allocating)
  Optimized Algorithm:    4.9124s (in-place)
  Improvement:              12.2% (1.14x speedup)

DETAILED RESULTS:
--------------------------------------------------------------------------------

Java Fork-Join:
  Status: SUCCESS
  Execution Time:   4.3064 seconds
  Wall Clock Time:   7.6101 seconds
  CPU Cores Used: 1
  Parallelism Level: 1

C pthreads:
  Status: SUCCESS
  Execution Time:   3.4003 seconds
  Wall Clock Time:   3.9567 seconds
  CPU Cores Used: 2

Rust Rayon:
  Status: SUCCESS
  Execution Time:   2.9513 seconds
  Wall Clock Time:   3.3054 seconds
  CPU Cores Used: 1
  Workers/Threads: 1

JavaScript Workers:
  Status: SUCCESS
  Execution Time:   9.8940 seconds
  Wall Clock Time:  12.6052 seconds
  CPU Cores Used: 2
  Workers/Threads: 2

JavaScript SharedArrayBuffer:
  Status: SUCCESS
  Execution Time:   5.4711 seconds
  Wall Clock Time:   7.9956 seconds
  CPU Cores Used: 2
  Workers/Threads: 2

Java Sequential:
  Status: SUCCESS
  Execution Time:   4.2529 seconds
  Wall Clock Time:   6.9002 seconds

Go (original):
  Status: SUCCESS
  Execution Time:   5.5959 seconds
  Wall Clock Time:   8.0420 seconds

Go (optimized):
  Status: SUCCESS
  Execution Time:   4.9124 seconds
  Wall Clock Time:   7.3964 seconds

C Sequential:
  Status: SUCCESS
  Execution Time:   1.7115 seconds
  Wall Clock Time:   3.8957 seconds

Rust Sequential:
  Status: SUCCESS
  Execution Time:   4.1051 seconds
  Wall Clock Time:   4.5053 seconds

JavaScript Sequential:
  Status: SUCCESS
  Execution Time:   5.3820 seconds
  Wall Clock Time:   8.1751 seconds

PERFORMANCE SUMMARY:
--------------------------------------------------------------------------------
Execution Times:
  Fastest:   1.7115s
  Slowest:   9.8940s
  Average:   4.7257s
  Range:       5.78x difference

Wall Clock Times:
  Fastest:   3.3054s
  Slowest:  12.6052s
  Average:   6.7625s
  Range:       3.81x difference

SYSTEM INFORMATION:
--------------------------------------------------------------------------------
CPU Cores: 2
Platform: Linux
OS: Linux 6.1.134-152.225.amzn2023.x86_64
Architecture: x86_64
Python Version: 3.11.0rc1

================================================================================
End of Report
================================================================================