================================================================================
PARALLEL IMPLEMENTATION COMPARISON REPORT
================================================================================
Generated: 2025-06-07 12:26:56
Test Data: 10,000,000 random integers
Task: Parallel merge sort + prime counting
System: 12 CPU cores, Darwin

OVERALL PERFORMANCE RANKINGS:
--------------------------------------------------------------------------------
Rank Implementation                 Type       Exec Time    Wall Time    Speedup 
--------------------------------------------------------------------------------
1    C pthreads                     Sequential   0.1614s      0.4558s     1.00x
2    Rust Rayon                     Parallel     0.1956s      0.4823s     0.83x
3    Java Fork-Join                 Parallel     0.2683s      0.7427s     0.60x
4    JavaScript SharedArrayBuffer   Parallel     0.6888s      1.4895s     0.23x
5    C Sequential                   Sequential   1.0061s      1.3151s     0.16x
6    Go (optimized)                 Sequential   1.1808s      1.6301s     0.14x
7    Go (original)                  Sequential   1.2474s      1.7047s     0.13x
8    Rust Sequential                Sequential   1.2709s      1.5603s     0.13x
9    Java Sequential                Sequential   1.4744s      1.9128s     0.11x
10   JavaScript Sequential          Sequential   2.0180s      2.8586s     0.08x
11   JavaScript Workers             Parallel     2.2040s      3.1442s     0.07x

PARALLEL EFFICIENCY ANALYSIS:
--------------------------------------------------------------------------------

Java:
  Parallel Implementation: Java Fork-Join
  Sequential Time:    1.4744s
  Parallel Time:      0.2683s
  Speedup:              5.50x
  Parallel Efficiency:  45.8%

Rust:
  Parallel Implementation: Rust Rayon
  Sequential Time:    1.2709s
  Parallel Time:      0.1956s
  Speedup:              6.50x
  Parallel Efficiency:  54.1%

JavaScript:
  Parallel Implementation: JavaScript Workers
  Sequential Time:    2.0180s
  Parallel Time:      2.2040s
  Speedup:              0.92x
  Parallel Efficiency:   7.6%

JavaScript Parallel Approaches Comparison:
  Sequential:         2.0180s (baseline)
  Worker Threads:     2.2040s (speedup: 0.92x, efficiency: 7.6%)
  SharedArrayBuffer:   0.6888s (speedup: 2.93x, efficiency: 24.4%)

Go Algorithm Comparison (Single-threaded):
  Original Algorithm:     1.2474s (memory allocating)
  Optimized Algorithm:    1.1808s (in-place)
  Improvement:               5.3% (1.06x speedup)

DETAILED RESULTS:
--------------------------------------------------------------------------------

Java Fork-Join:
  Status: SUCCESS
  Execution Time:   0.2683 seconds
  Wall Clock Time:   0.7427 seconds
  CPU Cores Used: 12
  Parallelism Level: 12

C pthreads:
  Status: SUCCESS
  Execution Time:   0.1614 seconds
  Wall Clock Time:   0.4558 seconds
  CPU Cores Used: 12

Rust Rayon:
  Status: SUCCESS
  Execution Time:   0.1956 seconds
  Wall Clock Time:   0.4823 seconds
  CPU Cores Used: 12
  Workers/Threads: 12

JavaScript Workers:
  Status: SUCCESS
  Execution Time:   2.2040 seconds
  Wall Clock Time:   3.1442 seconds
  CPU Cores Used: 12
  Workers/Threads: 12

JavaScript SharedArrayBuffer:
  Status: SUCCESS
  Execution Time:   0.6888 seconds
  Wall Clock Time:   1.4895 seconds
  CPU Cores Used: 12
  Workers/Threads: 8

Java Sequential:
  Status: SUCCESS
  Execution Time:   1.4744 seconds
  Wall Clock Time:   1.9128 seconds

Go (original):
  Status: SUCCESS
  Execution Time:   1.2474 seconds
  Wall Clock Time:   1.7047 seconds

Go (optimized):
  Status: SUCCESS
  Execution Time:   1.1808 seconds
  Wall Clock Time:   1.6301 seconds

C Sequential:
  Status: SUCCESS
  Execution Time:   1.0061 seconds
  Wall Clock Time:   1.3151 seconds

Rust Sequential:
  Status: SUCCESS
  Execution Time:   1.2709 seconds
  Wall Clock Time:   1.5603 seconds

JavaScript Sequential:
  Status: SUCCESS
  Execution Time:   2.0180 seconds
  Wall Clock Time:   2.8586 seconds

PERFORMANCE SUMMARY:
--------------------------------------------------------------------------------
Execution Times:
  Fastest:   0.1614s
  Slowest:   2.2040s
  Average:   1.0651s
  Range:      13.66x difference

Wall Clock Times:
  Fastest:   0.4558s
  Slowest:   3.1442s
  Average:   1.5724s
  Range:       6.90x difference

SYSTEM INFORMATION:
--------------------------------------------------------------------------------
CPU Cores: 12
Platform: Darwin
OS: Darwin 24.1.0
Architecture: arm64
Python Version: 3.11.11

================================================================================
End of Report
================================================================================