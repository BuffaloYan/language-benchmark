{
  "timestamp": "2025-06-07T18:57:07.275152",
  "system_info": {
    "cpu_cores": 6,
    "platform": "Linux",
    "python_version": "3.11.0"
  },
  "results": {
    "Java Fork-Join": {
      "success": true,
      "execution_time": 3.4891,
      "wall_time": 5.784303188323975,
      "stdout": "\ud83d\ude80 Java Parallel Merge Sort + Prime Counting\n============================================\nAvailable processors: 1\nSequential threshold: 1000 elements\n\n\ud83d\udcca Loading data...\nLoaded 10,000,000 numbers\n\ud83d\udd04 Starting parallel merge sort...\n\u2705 Parallel merge sort completed in 2.1438 seconds\n\ud83d\udd0d Sorting verified: true\n\ud83d\udd22 Starting parallel prime counting...\n\u2705 Parallel prime counting completed in 1.3454 seconds\n\ud83c\udfaf Found 664,028 prime numbers\n\u23f1\ufe0f  Total execution time: 3.4891 seconds\n\n\ud83d\udcc8 Performance Details:\n- Pool parallelism: 1\n- Active thread count: 0\n- Steal count: 2\n",
      "parallelism_info": {
        "cores": 1,
        "parallelism": 1,
        "steal_count": 2
      }
    },
    "C pthreads": {
      "success": true,
      "execution_time": 6.5848,
      "wall_time": 6.90532660484314,
      "stdout": "\ud83d\ude80 C Parallel Merge Sort + Prime Counting\n=========================================\nAvailable processors: 6\nMax recursion depth: 4\nSequential threshold: 1000 elements\n\n\ud83d\udcca Loading data...\nLoaded 10000000 numbers\n\ud83d\udd04 Starting parallel merge sort...\n\u2705 Parallel merge sort completed in 3.2062 seconds\n\ud83d\udd0d Sorting verified: true\n\ud83d\udd22 Starting parallel prime counting...\n\u2705 Parallel prime counting completed in 3.3786 seconds\n\ud83d\udcca Found 664028 prime numbers\n\u23f1\ufe0f  Total execution time: 6.5848 seconds\n\n\ud83d\udcc8 Performance Analysis:\n- Sort time: 3.2062 seconds\n- Prime time: 3.3786 seconds\n- Total time: 6.5848 seconds\n- CPU cores used: 6\n",
      "parallelism_info": {
        "cores": 6
      }
    },
    "Rust Rayon": {
      "success": true,
      "execution_time": 3.1637,
      "wall_time": 3.4908745288848877,
      "stdout": "[RUST-RAYON] Rust Parallel Merge Sort + Prime Counting\n============================================\nAvailable CPU cores: 1\nParallel threshold: 10,000 elements\n\n[DATA] Loading data...\nLoaded 10000000 numbers\n[SORT] Starting parallel merge sort...\n[SUCCESS] Parallel merge sort completed in 0.8738 seconds\n[VERIFY] Sorting verified: true\n[PRIMES] Starting parallel prime counting...\n[SUCCESS] Parallel prime counting completed in 2.2899 seconds\n[RESULT] Found 664028 prime numbers\n[TIME] Total execution time: 3.1637 seconds\n\n[PERFORMANCE] Performance Details:\n- Rayon thread pool size: 1\n- Sequential threshold: 10,000 elements\n- Sort time: 0.8738s\n- Prime time: 2.2899s\n",
      "parallelism_info": {
        "cores": 1,
        "workers": 1
      }
    },
    "JavaScript Workers": {
      "success": true,
      "execution_time": 11.621,
      "wall_time": 15.217121601104736,
      "stdout": "\ud83d\udd27 Creating worker pool with 6 workers\n[PARALLEL] JavaScript Parallel Merge Sort + Prime Counting\n===================================================\nAvailable CPU cores: 6\nWorker pool size: 6\nParallel threshold: 10,000 elements\n\n[DATA] Loading data...\nLoaded 10,000,000 numbers\n[SORT] Starting parallel merge sort...\n[SUCCESS] Parallel merge sort completed in 6.0990 seconds\n[VERIFY] Sorting verified: true\n[PRIMES] Starting parallel prime counting...\n[CHUNKS] Divided into 6 chunks for prime counting\n[SUCCESS] Parallel prime counting completed in 5.5220 seconds\n[RESULT] Found 664,028 prime numbers\n[TIME] Total execution time: 11.6210 seconds\n\n[PERFORMANCE] Performance Details:\n- Active workers: 6\n- Completed tasks: 6\n",
      "parallelism_info": {
        "cores": 6,
        "workers": 6
      }
    },
    "JavaScript SharedArrayBuffer": {
      "success": true,
      "execution_time": 10.0518,
      "wall_time": 13.202151775360107,
      "stdout": "[SHAREDARRAYBUFFER] JavaScript SharedArrayBuffer Parallel Merge Sort + Prime Counting\n====================================================================\nAvailable CPU cores: 6\n[DATA] Loading data...\nLoaded 10,000,000 numbers\n\ud83d\udd27 SharedArrayBuffer Setup:\n   - Data size: 10,000,000 integers\n   - Workers: 6\n   - Sequential threshold: 50,000\n   - Shared memory: 38.1 MB\n\n[SORT] Starting SharedArrayBuffer parallel merge sort...\n[SUCCESS] Parallel merge sort completed in 4.3715 seconds\n[VERIFY] Sorting verified: true\n\n[PRIMES] Starting SharedArrayBuffer parallel prime counting...\n[SUCCESS] Parallel prime counting completed in 5.6803 seconds\n[RESULT] Found 664,028 prime numbers\n\n[TIME] Total execution time: 10.0518 seconds\n\n[PERFORMANCE] Performance Details:\n- Workers used: 6\n- Sequential threshold: 50,000\n- Shared memory size: 38.1 MB\n- Sort time: 4.3715s\n- Prime time: 5.6803s\n",
      "parallelism_info": {
        "cores": 6,
        "workers": 6
      }
    },
    "Java Sequential": {
      "success": true,
      "execution_time": 3.4312,
      "wall_time": 6.1781699657440186,
      "stdout": "Loading data...\nLoaded 10,000,000 numbers\nStarting merge sort...\nJava merge sort completed in 2.0982 seconds\nSorting verified: true\nCounting prime numbers...\nPrime counting completed in 1.3330 seconds\nFound 664,028 prime numbers\nTotal execution time: 3.4312 seconds\n",
      "parallelism_info": {}
    },
    "Go (original)": {
      "success": true,
      "execution_time": 4.2959,
      "wall_time": 5.430842876434326,
      "stdout": "Loading data...\nLoaded 10000000 numbers\nStarting merge sort...\nGo merge sort completed in 2.6832 seconds\nSorting verified: true\nCounting prime numbers...\nPrime counting completed in 1.6127 seconds\nFound 664028 prime numbers\nTotal execution time: 4.2959 seconds\n",
      "parallelism_info": {}
    },
    "Go (optimized)": {
      "success": true,
      "execution_time": 3.7096,
      "wall_time": 4.907702684402466,
      "stdout": "Loading data...\nLoaded 10000000 numbers\nStarting merge sort...\nGo optimized merge sort completed in 2.1105 seconds\nSorting verified: true\nCounting prime numbers...\nPrime counting completed in 1.5991 seconds\nFound 664028 prime numbers\nTotal execution time: 3.7096 seconds\n",
      "parallelism_info": {}
    },
    "C Sequential": {
      "success": true,
      "execution_time": 1.3459,
      "wall_time": 3.070047378540039,
      "stdout": "Loading data...\nLoaded 10000000 numbers\nStarting merge sort...\nC merge sort completed in 0.8030 seconds\nSorting verified: true\nCounting prime numbers...\nPrime counting completed in 0.5430 seconds\nFound 664028 prime numbers\nTotal execution time: 1.3459 seconds\n",
      "parallelism_info": {}
    },
    "Rust Sequential": {
      "success": true,
      "execution_time": 3.2042,
      "wall_time": 3.5114965438842773,
      "stdout": "Loading data...\nLoaded 10000000 numbers\nStarting merge sort...\nRust merge sort completed in 1.8818 seconds\nSorting verified: true\nCounting prime numbers...\nPrime counting completed in 1.3224 seconds\nFound 664028 prime numbers\nTotal execution time: 3.2042 seconds\n",
      "parallelism_info": {}
    },
    "JavaScript Sequential": {
      "success": true,
      "execution_time": 4.487,
      "wall_time": 7.777628660202026,
      "stdout": "Loading data...\nLoaded 10,000,000 numbers\nStarting merge sort...\nJavaScript optimized merge sort completed in 2.8870 seconds\nSorting verified: true\nCounting prime numbers...\nPrime counting completed in 1.6000 seconds\nFound 664,028 prime numbers\nTotal execution time: 4.4870 seconds\n",
      "parallelism_info": {}
    }
  }
}